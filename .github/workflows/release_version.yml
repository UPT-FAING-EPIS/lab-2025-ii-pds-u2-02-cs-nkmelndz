name: Release Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (semver, e.g. 0.1.1)'
        required: true
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: 8.0.x

      - name: Determine version
        id: v
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "ver=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            tag=${GITHUB_REF#refs/tags/}
            echo "ver=${tag#v}" >> $GITHUB_OUTPUT
          fi

      - name: Update csproj version
        run: |
          ver=${{ steps.v.outputs.ver }}
          echo "Setting version to $ver"
          sed -i "s#<Version>.*</Version>#<Version>$ver</Version>#" Bank/Bank.Domain/Bank.Domain.csproj
          grep -n "<Version>" Bank/Bank.Domain/Bank.Domain.csproj

      - name: Build Release
        run: dotnet build Bank/Bank.Domain/Bank.Domain.csproj -c Release

      - name: Pack
        run: dotnet pack Bank/Bank.Domain/Bank.Domain.csproj -c Release -o out /p:PackageVersion=${{ steps.v.outputs.ver }} /p:Version=${{ steps.v.outputs.ver }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.v.outputs.ver }}
          name: Release v${{ steps.v.outputs.ver }}
          draft: false
          prerelease: false
          files: |
            out/*.nupkg
            out/*.snupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}